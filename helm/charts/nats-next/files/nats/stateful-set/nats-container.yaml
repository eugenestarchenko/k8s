{{- $ := . }}
{{- $pidFile := ternary "/var/run/nats/nats.pid" "/var/run/nats.pid" .Values.nats.reloader.enabled }}
name: nats

image: {{ include "nats.image" .Values.nats.container.image }}
imagePullPolicy: {{ .Values.nats.container.image.pullPolicy }}

ports:
{{- range $protocol := list "nats" "leafnodes" "websocket" "mqtt" "cluster" "gateway" "monitor" "profiling" }}
{{- $configProtocol := get $.Values.nats.config $protocol }}
{{- $containerPort := get $.Values.nats.container.ports $protocol }}
{{- if $configProtocol.enabled }}
- {{ merge (dict "name" $protocol "containerPort" $configProtocol.port) $containerPort | toYaml | nindent 2 }}
{{- end }}
{{- end }}

args:
- --config
- /etc/nats-config/nats.conf

{{- with .Values.nats.container.env }}
env:
{{- include "nats.env" . }}
{{- end }}

lifecycle:
  preStop:
    exec:
      # send the lame duck shutdown signal to trigger a graceful shutdown
      command:
      - nats-server
      - -sl=ldm={{ $pidFile }}

{{- with .Values.nats.config.monitor }}
{{- if .enabled }}
startupProbe:
  httpGet:
    path: /healthz
    port: {{ .port }}
  initialDelaySeconds: 10
  timeoutSeconds: 5
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 90
readinessProbe:
  httpGet:
    path: /healthz?js-server-only=true
    port: {{ .port }}
  initialDelaySeconds: 10
  timeoutSeconds: 5
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
livenessProbe:
  httpGet:
    path: /healthz?js-enabled-only=true
    port: {{ .port }}
  initialDelaySeconds: 10
  timeoutSeconds: 5
  periodSeconds: 30
  successThreshold: 1
  failureThreshold: 3
{{- end }}
{{- end }}

volumeMounts:
- name: config
  mountPath: /etc/nats-config
{{- if .Values.nats.reloader.enabled }}
- name: pid
  mountPath: /var/run/nats
{{- end}}
{{- with .Values.nats.config.jetstream }}
{{- if and .enabled .fileStorage.enabled .fileStorage.pvc.enabled }}
{{- with .fileStorage }}
- name: {{ include "nats.fullname" $ }}-js-pvc
  mountPath: {{ printf "%s/jetstream" .dir | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- with .Values.nats.config.resolver }}
{{- if and .enabled .pvc.enabled }}
- name: {{ include "nats.fullname" $ }}-jwt-pvc
  mountPath: {{ .dir | quote }}
{{- end }}
{{- end }}
{{- range $protocol := list "nats" "leafnodes" "websocket" "mqtt" "cluster" "gateway" }}
{{- $configProtocol := get $.Values.nats.config $protocol }}
{{- if and (or (eq $protocol "nats") $configProtocol.enabled) $configProtocol.tls.enabled $configProtocol.tls.secretName }}
- name: {{ $protocol }}-tls
  mountPath: {{ $configProtocol.tls.dir | quote }}
{{- end }}
{{- end }}
